{"version":3,"file":"Button.CustomSplit.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.CustomSplit.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,YAAY,GAAG;QACnB,KAAK,CAAC,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF;QAA8C,oDAA6B;QAA3E;;QAkDA,CAAC;QAjDQ,yCAAM,GAAb;YACQ,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAsB,CAAC;YAEzC,IAAM,uBAAuB,GAAG;;gBAC9B,OAAO;oBACL,qBAAqB,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;oBAClF,mBAAmB,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE;oBACxC,kBAAkB,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;oBAClE,oBAAoB,EAAE;wBACpB,SAAS;4BACP,GAAC,8BAAoB,IAAG;gCACtB,MAAM,EAAE,MAAM;6BACf;+BACF;qBACF;iBACF,CAAC;YACJ,CAAC,CAAC;YAEF,OAAO,CACL;gBACE,oBAAC,aAAK,mDAAiD;gBACvD,oBAAC,mBAAU,0BACU,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EACjC,IAAI,EAAC,gBAAgB,EACrB,OAAO,EAAE,YAAY,EACrB,KAAK,EAAE,IAAI,0BACW,cAAc,EACpC,MAAM,EAAE,uBAAuB,EAAE,EACjC,SAAS,EAAE;wBACT,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;6BAChC;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;6BACpC;yBACF;qBACF,GACD,CACE,CACP,CAAC;QACJ,CAAC;QACH,+BAAC;IAAD,CAAC,AAlDD,CAA8C,KAAK,CAAC,SAAS,GAkD5D;IAlDY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { HighContrastSelector } from '../../../Styling';\nimport { IconButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\n\nconst alertClicked = (): void => {\n  alert('Clicked');\n};\n\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n\n    const customSplitButtonStyles = (): IButtonStyles => {\n      return {\n        splitButtonMenuButton: { backgroundColor: 'white', width: '10px', border: 'none' },\n        splitButtonMenuIcon: { fontSize: '7px' },\n        splitButtonDivider: { borderLeft: '1px solid #c8c8c8', right: 17 },\n        splitButtonContainer: {\n          selectors: {\n            [HighContrastSelector]: {\n              border: 'none'\n            }\n          }\n        }\n      };\n    };\n\n    return (\n      <div>\n        <Label>Split button with icon and custom styles</Label>\n        <IconButton\n          data-automation-id=\"test\"\n          disabled={disabled}\n          checked={checked}\n          iconProps={{ iconName: 'Upload' }}\n          text=\"Create account\"\n          onClick={alertClicked}\n          split={true}\n          aria-roledescription={'split button'}\n          styles={customSplitButtonStyles()}\n          menuProps={{\n            items: [\n              {\n                key: 'emailMessage',\n                text: 'Email message',\n                iconProps: { iconName: 'Mail' }\n              },\n              {\n                key: 'calendarEvent',\n                text: 'Calendar event',\n                iconProps: { iconName: 'Calendar' }\n              }\n            ]\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]}