define(["require", "exports", "tslib", "react", "../../../Styling", "office-ui-fabric-react/lib/Button", "office-ui-fabric-react/lib/Label"], function (require, exports, tslib_1, React, Styling_1, Button_1, Label_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var alertClicked = function () {
        alert('Clicked');
    };
    var ButtonSplitCustomExample = /** @class */ (function (_super) {
        tslib_1.__extends(ButtonSplitCustomExample, _super);
        function ButtonSplitCustomExample() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ButtonSplitCustomExample.prototype.render = function () {
            var _a = this.props, disabled = _a.disabled, checked = _a.checked;
            var customSplitButtonStyles = function () {
                var _a;
                return {
                    splitButtonMenuButton: { backgroundColor: 'white', width: '10px', border: 'none' },
                    splitButtonMenuIcon: { fontSize: '7px' },
                    splitButtonDivider: { borderLeft: '1px solid #c8c8c8', right: 17 },
                    splitButtonContainer: {
                        selectors: (_a = {},
                            _a[Styling_1.HighContrastSelector] = {
                                border: 'none'
                            },
                            _a)
                    }
                };
            };
            return (React.createElement("div", null,
                React.createElement(Label_1.Label, null, "Split button with icon and custom styles"),
                React.createElement(Button_1.IconButton, { "data-automation-id": "test", disabled: disabled, checked: checked, iconProps: { iconName: 'Upload' }, text: "Create account", onClick: alertClicked, split: true, "aria-roledescription": 'split button', styles: customSplitButtonStyles(), menuProps: {
                        items: [
                            {
                                key: 'emailMessage',
                                text: 'Email message',
                                iconProps: { iconName: 'Mail' }
                            },
                            {
                                key: 'calendarEvent',
                                text: 'Calendar event',
                                iconProps: { iconName: 'Calendar' }
                            }
                        ]
                    } })));
        };
        return ButtonSplitCustomExample;
    }(React.Component));
    exports.ButtonSplitCustomExample = ButtonSplitCustomExample;
});
//# sourceMappingURL=Button.CustomSplit.Example.js.map