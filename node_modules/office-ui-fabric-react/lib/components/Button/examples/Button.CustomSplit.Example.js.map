{"version":3,"file":"Button.CustomSplit.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.CustomSplit.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AACxD,OAAO,EAAE,UAAU,EAAgB,MAAM,mCAAmC,CAAC;AAC7E,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AAEzD,IAAM,YAAY,GAAG;IACnB,KAAK,CAAC,SAAS,CAAC,CAAC;AACnB,CAAC,CAAC;AAEF;IAA8C,oDAA6B;IAA3E;;IAkDA,CAAC;IAjDQ,yCAAM,GAAb;QACQ,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAsB,CAAC;QAEzC,IAAM,uBAAuB,GAAG;;YAC9B,OAAO;gBACL,qBAAqB,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;gBAClF,mBAAmB,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACxC,kBAAkB,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,KAAK,EAAE,EAAE,EAAE;gBAClE,oBAAoB,EAAE;oBACpB,SAAS;wBACP,GAAC,oBAAoB,IAAG;4BACtB,MAAM,EAAE,MAAM;yBACf;2BACF;iBACF;aACF,CAAC;QACJ,CAAC,CAAC;QAEF,OAAO,CACL;YACE,oBAAC,KAAK,mDAAiD;YACvD,oBAAC,UAAU,0BACU,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EACjC,IAAI,EAAC,gBAAgB,EACrB,OAAO,EAAE,YAAY,EACrB,KAAK,EAAE,IAAI,0BACW,cAAc,EACpC,MAAM,EAAE,uBAAuB,EAAE,EACjC,SAAS,EAAE;oBACT,KAAK,EAAE;wBACL;4BACE,GAAG,EAAE,cAAc;4BACnB,IAAI,EAAE,eAAe;4BACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;yBAChC;wBACD;4BACE,GAAG,EAAE,eAAe;4BACpB,IAAI,EAAE,gBAAgB;4BACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;yBACpC;qBACF;iBACF,GACD,CACE,CACP,CAAC;IACJ,CAAC;IACH,+BAAC;AAAD,CAAC,AAlDD,CAA8C,KAAK,CAAC,SAAS,GAkD5D","sourcesContent":["import * as React from 'react';\nimport { IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { HighContrastSelector } from '../../../Styling';\nimport { IconButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\n\nconst alertClicked = (): void => {\n  alert('Clicked');\n};\n\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n\n    const customSplitButtonStyles = (): IButtonStyles => {\n      return {\n        splitButtonMenuButton: { backgroundColor: 'white', width: '10px', border: 'none' },\n        splitButtonMenuIcon: { fontSize: '7px' },\n        splitButtonDivider: { borderLeft: '1px solid #c8c8c8', right: 17 },\n        splitButtonContainer: {\n          selectors: {\n            [HighContrastSelector]: {\n              border: 'none'\n            }\n          }\n        }\n      };\n    };\n\n    return (\n      <div>\n        <Label>Split button with icon and custom styles</Label>\n        <IconButton\n          data-automation-id=\"test\"\n          disabled={disabled}\n          checked={checked}\n          iconProps={{ iconName: 'Upload' }}\n          text=\"Create account\"\n          onClick={alertClicked}\n          split={true}\n          aria-roledescription={'split button'}\n          styles={customSplitButtonStyles()}\n          menuProps={{\n            items: [\n              {\n                key: 'emailMessage',\n                text: 'Email message',\n                iconProps: { iconName: 'Mail' }\n              },\n              {\n                key: 'calendarEvent',\n                text: 'Calendar event',\n                iconProps: { iconName: 'Calendar' }\n              }\n            ]\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]}