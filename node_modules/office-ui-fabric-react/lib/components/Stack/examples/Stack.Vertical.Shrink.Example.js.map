{"version":3,"file":"Stack.Vertical.Shrink.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.Shrink.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAC3D,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAGjC,OAAO,EAAE,WAAW,EAAE,cAAc,EAAU,MAAM,oCAAoC,CAAC;AAMzF,iCAAiC;AACjC,IAAM,eAAe,GAAqB;IACxC,IAAI,EAAE;QACJ,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,cAAc,CAAC,YAAY;QACvC,KAAK,EAAE,cAAc,CAAC,KAAK;QAC3B,OAAO,EAAE,MAAM;QACf,cAAc,EAAE,QAAQ;QACxB,QAAQ,EAAE,QAAQ;KACnB;CACF,CAAC;AACF,IAAM,eAAe,GAAW;IAC9B,MAAM,EAAE,GAAG;CACZ,CAAC;AACF,IAAM,2BAA2B,GAAiB;IAChD,IAAI,EAAE;QACJ,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,cAAc,CAAC,YAAY;QACvC,KAAK,EAAE,cAAc,CAAC,KAAK;QAC3B,OAAO,EAAE,MAAM;QACf,MAAM,EAAE,EAAE;QACV,cAAc,EAAE,QAAQ;QACxB,QAAQ,EAAE,QAAQ;KACnB;CACF,CAAC;AAEF,oBAAoB;AACpB,IAAM,gBAAgB,GAAiB,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;AAC1D,IAAM,gBAAgB,GAAiB;IACrC,WAAW,EAAE,CAAC;IACd,OAAO,EAAE,EAAE;CACZ,CAAC;AAEF;IAAgD,sDAAkC;IAChF,oCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QA2CO,qBAAe,GAAG,UAAC,KAAa;YACtC,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;QAhDA,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,GAAG;SACjB,CAAC;;IACJ,CAAC;IAEM,2CAAM,GAAb;QACE,6BAA6B;QAC7B,IAAM,WAAW,GAAiB;YAChC,IAAI,EAAE;gBACJ,UAAU,EAAE,cAAc,CAAC,aAAa;gBACxC,MAAM,EAAK,IAAI,CAAC,KAAK,CAAC,WAAW,MAAG;gBACpC,QAAQ,EAAE,QAAQ;aACnB;SACF,CAAC;QAEF,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,EAAE,gBAAgB;YAC7B,oBAAC,MAAM,IACL,KAAK,EAAC,wDAAwD,EAC9D,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,eAAe,GAC9B;YACF,6BAAK,SAAS,EAAE,WAAW,CAAC,eAAe,CAAC;gBAC1C,oBAAC,KAAK,IAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,gBAAgB;oBAClD,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,MAAM,EAAE,eAAe,eAE3B;oBACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,MAAM,EAAE,eAAe,eAE3B;oBACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,aAAa,QAAC,MAAM,EAAE,2BAA2B,qBAErD;oBACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,MAAM,EAAE,eAAe,eAE3B,CACP,CACJ,CACA,CACT,CAAC;IACJ,CAAC;IAKH,iCAAC;AAAD,CAAC,AApDD,CAAgD,KAAK,CAAC,SAAS,GAoD9D","sourcesContent":["import * as React from 'react';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { Stack } from '../Stack';\nimport { IStackStyles, IStackTokens } from '../Stack.types';\nimport { IStackItemStyles } from '../StackItem/StackItem.types';\nimport { mergeStyles, DefaultPalette, IStyle } from 'office-ui-fabric-react/lib/Styling';\n\nexport interface IExampleState {\n  stackHeight: number;\n}\n\n// Non-mutating styles definition\nconst stackItemStyles: IStackItemStyles = {\n  root: {\n    alignItems: 'center',\n    background: DefaultPalette.themePrimary,\n    color: DefaultPalette.white,\n    display: 'flex',\n    justifyContent: 'center',\n    overflow: 'hidden'\n  }\n};\nconst containerStyles: IStyle = {\n  height: 200\n};\nconst nonShrinkingStackItemStyles: IStackStyles = {\n  root: {\n    alignItems: 'center',\n    background: DefaultPalette.themePrimary,\n    color: DefaultPalette.white,\n    display: 'flex',\n    height: 50,\n    justifyContent: 'center',\n    overflow: 'hidden'\n  }\n};\n\n// Tokens definition\nconst outerStackTokens: IStackTokens = { childrenGap: 5 };\nconst innerStackTokens: IStackTokens = {\n  childrenGap: 5,\n  padding: 10\n};\n\nexport class VerticalStackShrinkExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackHeight: 100\n    };\n  }\n\n  public render(): JSX.Element {\n    // Mutating styles definition\n    const stackStyles: IStackStyles = {\n      root: {\n        background: DefaultPalette.themeTertiary,\n        height: `${this.state.stackHeight}%`,\n        overflow: 'hidden'\n      }\n    };\n\n    return (\n      <Stack tokens={outerStackTokens}>\n        <Slider\n          label=\"Change the stack height to see how child items shrink:\"\n          min={1}\n          max={100}\n          step={1}\n          defaultValue={100}\n          showValue={true}\n          onChange={this._onHeightChange}\n        />\n        <div className={mergeStyles(containerStyles)}>\n          <Stack styles={stackStyles} tokens={innerStackTokens}>\n            <Stack.Item grow styles={stackItemStyles}>\n              I shrink\n            </Stack.Item>\n            <Stack.Item grow styles={stackItemStyles}>\n              I shrink\n            </Stack.Item>\n            <Stack.Item grow disableShrink styles={nonShrinkingStackItemStyles}>\n              I don't shrink\n            </Stack.Item>\n            <Stack.Item grow styles={stackItemStyles}>\n              I shrink\n            </Stack.Item>\n          </Stack>\n        </div>\n      </Stack>\n    );\n  }\n\n  private _onHeightChange = (value: number): void => {\n    this.setState({ stackHeight: value });\n  };\n}\n"]}