import * as tslib_1 from "tslib";
import * as React from 'react';
import { Slider } from 'office-ui-fabric-react/lib/Slider';
import { Stack } from '../Stack';
import { DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
// Non-mutating styles definition
var itemStyles = {
    alignItems: 'center',
    background: DefaultPalette.themePrimary,
    color: DefaultPalette.white,
    height: 50,
    display: 'flex',
    justifyContent: 'center',
    width: 50
};
// Tokens definition
var sectionStackTokens = { childrenGap: 10 };
var wrapStackTokens = { childrenGap: 20 };
var VerticalStackWrapExample = /** @class */ (function (_super) {
    tslib_1.__extends(VerticalStackWrapExample, _super);
    function VerticalStackWrapExample(props) {
        var _this = _super.call(this, props) || this;
        _this._onHeightChange = function (value) {
            _this.setState({ stackHeight: value });
        };
        _this.state = {
            stackHeight: 420
        };
        return _this;
    }
    VerticalStackWrapExample.prototype.render = function () {
        var stackHeight = this.state.stackHeight;
        // Mutating styles definition
        var stackStyles = {
            root: {
                background: DefaultPalette.themeTertiary,
                height: stackHeight
            }
        };
        return (React.createElement(Stack, { tokens: sectionStackTokens },
            React.createElement(Slider, { label: "Change the stack height to see how child items wrap onto multiple columns:", min: 1, max: 420, step: 1, defaultValue: 420, showValue: true, onChange: this._onHeightChange }),
            React.createElement(Stack, { wrap: true, styles: stackStyles, tokens: wrapStackTokens },
                React.createElement("span", { style: itemStyles }, "1"),
                React.createElement("span", { style: itemStyles }, "2"),
                React.createElement("span", { style: itemStyles }, "3"),
                React.createElement("span", { style: itemStyles }, "4"),
                React.createElement("span", { style: itemStyles }, "5"),
                React.createElement("span", { style: itemStyles }, "6"))));
    };
    return VerticalStackWrapExample;
}(React.Component));
export { VerticalStackWrapExample };
//# sourceMappingURL=Stack.Vertical.Wrap.Example.js.map