import * as tslib_1 from "tslib";
import * as React from 'react';
import { Stack } from '../Stack';
import { DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
// Styles definition
var stackStyles = {
    root: {
        background: DefaultPalette.themeTertiary
    }
};
var stackItemStyles = {
    root: {
        background: DefaultPalette.themePrimary,
        color: DefaultPalette.white,
        padding: 5
    }
};
// Tokens definition
var containerStackTokens = { childrenGap: 5 };
var verticalGapStackTokens = {
    childrenGap: 10,
    padding: 10
};
var itemAlignmentsStackTokens = {
    childrenGap: 5,
    padding: 10
};
var clickableStackTokens = {
    padding: 10
};
var VerticalStackReversedExample = /** @class */ (function (_super) {
    tslib_1.__extends(VerticalStackReversedExample, _super);
    function VerticalStackReversedExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onClick = function () {
            alert('Clicked VerticalStack');
        };
        return _this;
    }
    VerticalStackReversedExample.prototype.render = function () {
        return (React.createElement(Stack, { tokens: containerStackTokens },
            React.createElement("span", null, "Default vertical stack"),
            React.createElement(Stack, { reversed: true, styles: stackStyles },
                React.createElement("span", null, "Item One"),
                React.createElement("span", null, "Item Two"),
                React.createElement("span", null, "Item Three")),
            React.createElement("span", null, "Vertical gap between items"),
            React.createElement(Stack, { reversed: true, styles: stackStyles, tokens: verticalGapStackTokens },
                React.createElement("span", null, "Item One"),
                React.createElement("span", null, "Item Two"),
                React.createElement("span", null, "Item Three")),
            React.createElement("span", null, "Item alignments"),
            React.createElement(Stack, { reversed: true, styles: stackStyles, tokens: itemAlignmentsStackTokens },
                React.createElement(Stack.Item, { align: "auto", styles: stackItemStyles },
                    React.createElement("span", null, "Auto-aligned item")),
                React.createElement(Stack.Item, { align: "stretch", styles: stackItemStyles },
                    React.createElement("span", null, "Stretch-aligned item")),
                React.createElement(Stack.Item, { align: "baseline", styles: stackItemStyles },
                    React.createElement("span", null, "Baseline-aligned item")),
                React.createElement(Stack.Item, { align: "start", styles: stackItemStyles },
                    React.createElement("span", null, "Start-aligned item")),
                React.createElement(Stack.Item, { align: "center", styles: stackItemStyles },
                    React.createElement("span", null, "Center-aligned item")),
                React.createElement(Stack.Item, { align: "end", styles: stackItemStyles },
                    React.createElement("span", null, "End-aligned item"))),
            React.createElement("span", null, "Clickable vertical stack"),
            React.createElement(Stack, { onClick: this._onClick, styles: stackStyles, tokens: clickableStackTokens },
                React.createElement("span", null, "Click inside this box"))));
    };
    return VerticalStackReversedExample;
}(React.Component));
export { VerticalStackReversedExample };
//# sourceMappingURL=Stack.Vertical.Reversed.Example.js.map